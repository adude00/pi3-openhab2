rule "faikin01 all"
when 
	Member of g_faikin01_cmd received command
then
	var String command
	var String translation

	if ( receivedCommand == ON ) translation = "true"
	if ( receivedCommand == OFF ) translation = "false"
	//logInfo("faikin01 DEBUG","Item: " + triggeringItem.name + " - Command: " + receivedCommand + " - Translation: " + translation )
	
	// ORIGINAL COMMAND
	if ( triggeringItem.name == "faikin01_temp" )     command = "{ \"temp\":"+ receivedCommand +" }"
	if ( triggeringItem.name == "faikin01_fan" )      command = "{ \"fan\":\""+ receivedCommand + "\" }"
	if ( triggeringItem.name == "faikin01_mode" )     command = "{ \"mode\":\""+ receivedCommand + "\" }"
	// TRANSLATED true/false 
	if ( triggeringItem.name == "faikin01_power" )    command = "{ \"power\":"+ translation +" }"
	if ( triggeringItem.name == "faikin01_econo" )    command = "{ \"econo\":"+ translation +" }"
	if ( triggeringItem.name == "faikin01_swingv" )   command = "{ \"swingv\":"+ translation +" }"
	if ( triggeringItem.name == "faikin01_powerful" ) command = "{ \"powerful\":"+ translation +" }"


	logInfo("faikin01 command",command)        
 
	var actionsBroker = getActions("mqtt","mqtt:broker:brokerv2")
	actionsBroker.publishMQTT( "command/faikin01/control", command )

end


rule "faikin01 AutoQuiet"
when
        Item faikin01_power received command ON
then
        if (faikin01_AutoQuiet.state == ON) {
		createTimer(now.plusSeconds(5), [|
			faikin01_fan.sendCommand("Q")
                	logInfo("faikin01 AutoQuiet","Quiet mode abilitato")
		])	
	}
end

