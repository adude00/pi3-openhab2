Group led01

// FAKE FOR ALEXA
Switch led01_fake01 "Bancone [%s]"           (gLuci) [ "Switchable" ]

Switch led01_Power     "Barra Colorato Acceso"      (gRGB, gLuci)      {channel="mqtt:topic:led01:powerColor"}
String led01_RGB       "Barra Colorata Colore [%s]" (gRGB)             {channel="mqtt:topic:led01:colorRGB"}
Dimmer led01_Dim       "Barra Colorata [%.0f %%]"   (gLightsDim)       {channel="mqtt:topic:led01:dimColor"}
Color  led01_Color     "Barra Colore" (gRGB)                           {channel="mqtt:topic:led01:colorControl"}

Switch led01_PowerW    "Barra Bianca Acceso [%s]"   (gRGB, gLuci)      {channel="mqtt:topic:led01:powerWhite"}
Dimmer led01_DimW      "Barra Bianca [%.0f %%]"     (gLightsDim)       {channel="mqtt:topic:led01:dimWhite"}

// setoption4 1: DIMMER > DIMMER
// setoption4 0: DIMMER > RESULT
// Per il POWER, il RESULT non ha DIMMER e COLOR. Causa loggate di errore

// setoption4 0
//Dimmer led01_Dim   "Barra Power [%.0f %%]" (gLightsDim) {mqtt=">[broker:cmnd/led01/DIMMER:command:*:default], <[broker:stat/led01/RESULT:state:JSONPATH($.Dimmer)"}
//String led01_RGB   "Barra Color [%s]"  (gRGB)      {mqtt="<[broker:stat/led01/RESULT:state:JSONPATH($.Color)]"}


// STATUS
Number   led01_RSSI      "Barra: RSSI [%d %%]"       <qualityofservice> (led01, sonoff, gRSSI)        {channel="mqtt:topic:led01:rssi"}
String   led01_Reachable "Barra: Status [%s]"        <switch>           (led01, sonoff, gReachable)   {channel="mqtt:topic:led01:reachable"}
String   led01_Uptime    "Barra: Uptime [%s]"        <clock>            (led01, sonoff, gUptime)      {channel="mqtt:topic:led01:uptime"}

DateTime led01_Date      "LED 01: Refresh [%1$tH:%1$tM]" <clock>        (led01, sonoff, gVersion, gTime) {channel="mqtt:topic:led01:time"}
String   led01_Core      "LED 01: Core [%s]"         <text>             (led01, sonoff, gVersion, gCore) {channel="mqtt:topic:led01:core"}
String   led01_SDK       "LED 01: SDK [%s]"          <text>             (led01, sonoff, gVersion, gSDK)  {channel="mqtt:topic:led01:sdk"}
String   led01_Version   "LED 01: Version [%s]"      <text>             (led01, sonoff, gVersion, gFirmware) {channel="mqtt:topic:led01:version"}

