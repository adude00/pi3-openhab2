Group led01

Color  led01_Color "Bancone Colore"       (gRGB)
Switch led01_Power "Barra Colorato Acceso"      (gRGB,gLuci)  {mqtt=">[broker:cmnd/led01/DIMMER1:command:*:default], <[broker:stat/led01/DIMMER:state:JSONPATH($.POWER1)" }
String led01_RGB   "Bancone Colorato Colore [%s]"  (gRGB)      {mqtt="<[broker:stat/led01/HSBCOLOR1:state:JSONPATH($.Color1)]"}
Dimmer led01_Dim   "Bancone Colorato [%.0f %%]"   (gLightsDim) [ "Lighting" ] {mqtt=">[broker:cmnd/led01/DIMMER1:command:*:default], <[broker:stat/led01/DIMMER:state:JSONPATH($.Dimmer1)"}

// BIANCO
Switch led01_PowerW "Bancone Bianco Acceso [%s]"     (gRGB,gLuci) {mqtt=">[broker:cmnd/led01/DIMMER2:command:*:default], <[broker:stat/led01/DIMMER:state:JSONPATH($.POWER2)]"}
Dimmer led01_DimW   "Bancone Bianco [%.0f %%]" (gLightsDim) [ "Lighting" ] {mqtt=">[broker:cmnd/led01/DIMMER2:command:*:default], <[broker:stat/led01/DIMMER:state:JSONPATH($.Dimmer2)"}


// setoption4 1: DIMMER > DIMMER
// setoption4 0: DIMMER > RESULT
// Per il POWER, il RESULT non ha DIMMER e COLOR. Causa loggate di errore

// setoption4 0
//Dimmer led01_Dim   "Bancone Power [%.0f %%]" (gLightsDim) {mqtt=">[broker:cmnd/led01/DIMMER:command:*:default], <[broker:stat/led01/RESULT:state:JSONPATH($.Dimmer)"}
//String led01_RGB   "Bancone Color [%s]"  (gRGB)      {mqtt="<[broker:stat/led01/RESULT:state:JSONPATH($.Color)]"}


// STATUS
Number led01_RSSI "Bancone: RSSI [%d %%]" <qualityofservice> (led01,sonoff,gRSSI)
    { mqtt="<[broker:tele/led01/STATE:state:JSONPATH($.Wifi.RSSI)]" }
String led01_Reachable "Bancone: Status [%s]" <switch> (led01,sonoff,gReachable)
    { mqtt="<[broker:tele/led01/LWT:state:MAP(reachable.map)]" }
String led01_Uptime "Bancone: Uptime [%s]" <clock> (led01,sonoff,gUptime)
    { mqtt="<[broker:tele/led01/STATE:state:JSONPATH($.Uptime)]" }

// Versions
DateTime  led01_Date     "LED 01: Refresh [ %1$tH:%1$tM]"   <clock>      (led01,sonoff,gVersion,gTime)
    { mqtt="<[broker:tele/led01/STATE:state:JSONPATH($.Time)]" }

String    led01_Core     "LED 01: Core [%s]"                <text>       (led01,sonoff,gVersion,gCore)
    { mqtt="<[broker:stat/led01/STATUS2:state:JSONPATH($.StatusFWR.Core)]" }

String    led01_SDK      "LED 01: SDK [%s]"                 <text>       (led01,sonoff,gVersion,gSDK)
    { mqtt="<[broker:stat/led01/STATUS2:state:JSONPATH($.StatusFWR.SDK)]" }

String    led01_Version  "LED 01: Version [%s]"             <text>       (led01,sonoff,gVersion,gFirmware)
    { mqtt="<[broker:stat/led01/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }
