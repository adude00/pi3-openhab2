Group led03

Color  led03_Color "Discoteca Color"       (gRGB)
Switch led03_Power "Discoteca Accesa" (gRGB,gLuci)  {mqtt=">[broker:cmnd/led03/DIMMER1:command:*:default], <[broker:stat/led03/DIMMER:state:JSONPATH($.POWER1)" }
String led03_RGB   "Discoteca Color [%s]"  (gRGB)      {mqtt="<[broker:stat/led03/HSBCOLOR1:state:JSONPATH($.Color1)]"}
Dimmer led03_Dim   "Discoteca [%.0f %%]" (gLightsDim) [ "Lighting" ] {mqtt=">[broker:cmnd/led03/DIMMER1:command:*:default], <[broker:stat/led03/DIMMER:state:JSONPATH($.Dimmer1)"}

Switch led03_PowerW "Soffitto Acceso" (gRGB,gLuci) {mqtt=">[broker:cmnd/led03/DIMMER2:command:*:default], <[broker:stat/led03/DIMMER:state:JSONPATH($.POWER2)]"}
Dimmer led03_DimW   "Soffitto [%.0f %%]" (gLightsDim) [ "Lighting" ] {mqtt=">[broker:cmnd/led03/DIMMER2:command:*:default], <[broker:stat/led03/DIMMER:state:JSONPATH($.Dimmer2)"}


// setoption4 1: DIMMER > DIMMER
// setoption4 0: DIMMER > RESULT
// Per il POWER, il RESULT non ha DIMMER e COLOR. Causa loggate di errore

// setoption4 0
//Dimmer led03_Dim   "Soffitto Power [%.0f %%]" (gLightsDim) {mqtt=">[broker:cmnd/led03/DIMMER:command:*:default], <[broker:stat/led03/RESULT:state:JSONPATH($.Dimmer)"}
//String led03_RGB   "Soffitto Color [%s]"  (gRGB)      {mqtt="<[broker:stat/led03/RESULT:state:JSONPATH($.Color)]"}


// STATUS
Number led03_RSSI "Soffitto: RSSI [%d %%]" <qualityofservice> (led03,sonoff,gRSSI)
    { mqtt="<[broker:tele/led03/STATE:state:JSONPATH($.Wifi.RSSI)]" }
String led03_Reachable "Soffitto: Status [%s]" <switch> (led03,sonoff,gReachable)
    { mqtt="<[broker:tele/led03/LWT:state:MAP(reachable.map)]" }
String led03_Uptime "Soffitto: Uptime [%s]" <clock> (led03,sonoff)
    { mqtt="<[broker:tele/led03/STATE:state:JSONPATH($.Uptime)]" }

// Versions
DateTime  led03_Date     "LED 03: Refresh [ %1$tH:%1$tM]"   <clock>      (led03,sonoff,gVersion,gTime)
    { mqtt="<[broker:tele/led03/STATE:state:JSONPATH($.Time)]" }

String    led03_Core     "LED 03: Core [%s]"                <text>       (led03,sonoff,gVersion,gCore)
    { mqtt="<[broker:stat/led03/STATUS2:state:JSONPATH($.StatusFWR.Core)]" }

String    led03_SDK      "LED 03: SDK [%s]"                 <text>       (led03,sonoff,gVersion,gSDK)
    { mqtt="<[broker:stat/led03/STATUS2:state:JSONPATH($.StatusFWR.SDK)]" }

String    led03_Version  "LED 03: Version [%s]"             <text>       (led03,sonoff,gVersion,gFirmware)
    { mqtt="<[broker:stat/led03/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }
