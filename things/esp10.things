Thing mqtt:topic:tasmota:esp10 "Total house Power" (mqtt:broker:brokerv2)  [ availabilityTopic="tele/esp10/LWT", payloadAvailable="Online", payloadNotAvailable="Offline" ] {
    Channels:
        // Sonoff Basic / Sonoff S20 Smart Socket (Read and switch on-state)
        Type switch   : PowerSwitch	[stateTopic="stat/esp10/POWER",   commandTopic="cmnd/esp10/POWER", on="ON", off="OFF"]

        // Sonoff Pow (read current wattage; for read and switch on-state see above)
        Type number : Power		[stateTopic="tele/esp10/SENSOR",  transformationPattern="JSONPATH:$.ENERGY.Power"]
        Type number : ApparentPower	[stateTopic="tele/esp10/SENSOR",  transformationPattern="JSONPATH:$.ENERGY.ApparentPower"]
        Type number : ReactivePower	[stateTopic="tele/esp10/SENSOR",  transformationPattern="JSONPATH:$.ENERGY.ReactivePower"]
        Type number : Voltage		[stateTopic="tele/esp10/SENSOR",  transformationPattern="JSONPATH:$.ENERGY.Voltage"]
        Type number : Current		[stateTopic="tele/esp10/SENSOR",  transformationPattern="JSONPATH:$.ENERGY.Current"]
        Type number : Frequency		[stateTopic="tele/esp10/SENSOR",  transformationPattern="JSONPATH:$.ENERGY.Frequency"]

        // devices including AM2301 temperature sensor
        //Type number   : Temperature   [stateTopic="tele/esp10/SENSOR",  transformationPattern="JSONPATH:$.AM2301.Temperature"]
        //Type number   : Humidity      [stateTopic="tele/esp10/SENSOR",  transformationPattern="JSONPATH:$.AM2301.Humidity"]

        // Tasmota Status
        Type string   : Reachable     [stateTopic="tele/esp10/LWT"]
        Type number   : RSSI          [stateTopic="tele/esp10/STATE",  transformationPattern="JSONPATH:$.Wifi.RSSI"]
        Type number   : LoadAvg       [stateTopic="tele/esp10/STATE",  transformationPattern="JSONPATH:$.LoadAvg"]
        Type string   : Uptime        [stateTopic="tele/esp10/STATE",  transformationPattern="JSONPATH:$.Uptime"]
        Type string   : Time          [stateTopic="tele/esp10/STATE",  transformationPattern="JSONPATH:$.Time"]

        // Diagnostics: Define specific for what you really need on a regular basis, use standalone MQTT client for troubleshooting
        //Type string   : RestartReason [stateTopic="tele/esp10/INFO3",  transformationPattern="JSONPATH:$.RestartReason"]
        //Type string   : Version       [stateTopic="tele/esp10/INFO1",  transformationPattern="JSONPATH:$.Version"]
        Type string   : Result        [stateTopic="stat/esp10/RESULT"]

        Type string : Version       [stateTopic="tele/esp10/INFO1", transformationPattern="JSONPATH:$.Info1.Version"]
        Type string : RestartReason [stateTopic="tele/esp10/INFO3", transformationPattern="JSONPATH:$.Info3.RestartReason"]
	Type number : Uptime        [stateTopic="tele/esp10/STATE", transformationPattern="JSONPATH:$.UptimeSec"]
        Type string : WifiDowntime  [stateTopic="tele/esp10/STATE", transformationPattern="JSONPATH:$.Wifi.Downtime"]

	// NO - non mi piace - Type switch : Reachable     [stateTopic="tele/esp10/LWT",     transformationPattern="MAP:tasmota-reachable.map"]

	// old one, have to query it
        //Type string : Version2      [stateTopic="stat/esp10/STATUS2", transformationPattern="JSONPATH:$.StatusFWR.Version"]
}
